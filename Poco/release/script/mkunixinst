#! /bin/bash
#
# $Id: //poco/1.4/release/script/mkunixinst#4 $
#
# mkunixinst
#
# Create a binary release for distribution.
# This is a wrapper for mkunixinstaller that syncs to the
# Perforce head revision, reads the current
# version from $POCO_BASE/PLATFORM_VERSION and requires a release
# specification (loaded from $POCO_BASE/release/spec/*.release)
# as argument.
#
# usage: mkunixinst [-l <perforce-label>] [<specfile>]
#

if [ "$POCO_BASE" = "" ] ; then
  echo "Error: POCO_BASE not set."
  exit 1
fi

label=""
spec=""
while [ "$1" != "" ] ; 
do
	if [ "$1" = "-l" ] ; then
		shift
		label=@$1
		shift
	else
		spec=$1
		shift
	fi
done

if [ "$spec" != "" ] ; then
  relspec="-f release/spec/${spec}.release"
  tag="-$spec"
  reltag="-t $spec"
else
  relspec=""
  reltag=""
  tag=""
fi

cd $POCO_BASE

#
# Sync files
#
echo "Syncing files..."
p4 sync ./...$label

if [ ! -f PLATFORM_VERSION ] ; then
  echo "Error: No PLATFORM_VERSION file found."
  exit 2
fi

if [ `uname` = Linux ] ; then
	if [ ! -f /etc/lsb-release ] ; then
		if [ ! -x /usr/bin/lsb_release ] ; then
			echo "Error: No /etc/lsb-release file found. Please create one."
			exit 2
		fi
	fi
fi

read version <$POCO_BASE/PLATFORM_VERSION
release=$version$tag

#
# Build release
#

echo "Building tools"
osname=`uname -s | tr ' ' '_'`
osarch=`uname -m | tr ' ' '_'`
tools=$POCO_BASE/stage/tools
rm -rf $tools
mkdir -p $tools
mkrelease -o $tools $version CppParser PocoDoc

cd $tools
./configure --no-tests --no-samples --omit=Net
make -s -j8 DEFAULT_TARGET=shared_release

if [ $osname = "Darwin" ] ; then
	archpath=`dirname $tools/PocoDoc/bin/Darwin/*/PocoDoc`
	osarch=`basename $archpath`
fi

export PATH=$tools/PocoDoc/bin/$osname/$osarch:$PATH
export LD_LIBRARY_PATH=$tools/lib/$osname/$osarch:$LD_LIBRARY_PATH
cd $POCO_BASE

echo "Building release $release"
mkunixinstaller -l -u $reltag $relspec
